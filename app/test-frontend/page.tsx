'use client'

import { useState, useEffect } from 'react'

export default function TestFrontendPage() {
  const [reportData, setReportData] = useState(null)
  const [treeData, setTreeData] = useState(null)
  const [loading, setLoading] = useState(true)
  const [errors, setErrors] = useState([])

  useEffect(() => {
    const testFetch = async () => {
      const testErrors = []

      try {
        console.log('üîç Testing review report API...')
        const reportResponse = await fetch('/api/review/report')
        console.log('Report response status:', reportResponse.status)

        if (!reportResponse.ok) {
          throw new Error(`Report API failed: ${reportResponse.status}`)
        }

        const reportResult = await reportResponse.json()
        console.log('‚úÖ Report data:', reportResult)
        setReportData(reportResult)
      } catch (err) {
        console.error('‚ùå Report API error:', err)
        testErrors.push(`Report API: ${err.message}`)
      }

      try {
        console.log('üå≥ Testing file tree API...')
        const treeResponse = await fetch('/api/review/tree')
        console.log('Tree response status:', treeResponse.status)

        if (!treeResponse.ok) {
          throw new Error(`Tree API failed: ${treeResponse.status}`)
        }

        const treeResult = await treeResponse.json()
        console.log('‚úÖ Tree data:', treeResult)
        setTreeData(treeResult)
      } catch (err) {
        console.error('‚ùå Tree API error:', err)
        testErrors.push(`Tree API: ${err.message}`)
      }

      setErrors(testErrors)
      setLoading(false)
    }

    testFetch()
  }, [])

  return (
    <div className="min-h-screen p-8 bg-gray-50">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-3xl font-bold mb-6">Frontend Data Fetching Test</h1>

        {loading && (
          <div className="text-center py-8">
            <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
            <p>Testing APIs...</p>
          </div>
        )}

        {errors.length > 0 && (
          <div className="bg-red-50 border border-red-200 rounded-lg p-6 mb-6">
            <h2 className="text-lg font-semibold text-red-800 mb-4">Errors Found:</h2>
            <ul className="list-disc list-inside space-y-2">
              {errors.map((error, index) => (
                <li key={index} className="text-red-700">{error}</li>
              ))}
            </ul>
          </div>
        )}

        {!loading && errors.length === 0 && (
          <div className="bg-green-50 border border-green-200 rounded-lg p-6 mb-6">
            <h2 className="text-lg font-semibold text-green-800">‚úÖ All APIs Working!</h2>
            <p className="text-green-700">Both report and tree APIs are responding correctly.</p>
          </div>
        )}

        {reportData && (
          <div className="bg-white rounded-lg border border-gray-200 p-6 mb-6">
            <h2 className="text-xl font-semibold mb-4">üìä Report Data</h2>
            <div className="grid grid-cols-2 gap-4 mb-4">
              <div>
                <strong>Project:</strong> {reportData.metadata?.projectName}
              </div>
              <div>
                <strong>Generated By:</strong> {reportData.metadata?.generatedBy}
              </div>
              <div>
                <strong>Total Files:</strong> {reportData.stats?.totalFiles}
              </div>
              <div>
                <strong>Bundle Size:</strong> {reportData.stats?.totalSizeMB} MB
              </div>
            </div>
            <details className="mt-4">
              <summary className="cursor-pointer font-medium">View Full Report Data</summary>
              <pre className="mt-2 p-4 bg-gray-100 rounded text-sm overflow-auto">
                {JSON.stringify(reportData, null, 2)}
              </pre>
            </details>
          </div>
        )}

        {treeData && (
          <div className="bg-white rounded-lg border border-gray-200 p-6">
            <h2 className="text-xl font-semibold mb-4">üå≥ File Tree Data</h2>
            <div className="mb-4">
              <strong>Root:</strong> {treeData.name} ({treeData.children?.length || 0} items)
            </div>
            <details className="mt-4">
              <summary className="cursor-pointer font-medium">View Full Tree Data</summary>
              <pre className="mt-2 p-4 bg-gray-100 rounded text-sm overflow-auto max-h-64">
                {JSON.stringify(treeData, null, 2)}
              </pre>
            </details>
          </div>
        )}

        <div className="mt-8 p-4 bg-blue-50 border border-blue-200 rounded-lg">
          <h3 className="font-semibold text-blue-800 mb-2">How to use this test:</h3>
          <ol className="list-decimal list-inside space-y-1 text-blue-700 text-sm">
            <li>Open browser developer tools (F12)</li>
            <li>Check the Console tab for detailed logs</li>
            <li>Look for any error messages or failed network requests</li>
            <li>If this page works but /review doesn't, compare the implementation</li>
          </ol>
        </div>
      </div>
    </div>
  )
}